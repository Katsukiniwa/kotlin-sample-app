/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample


import kotlin.collections.List

import nu.studer.sample.information_schema.InformationSchema
import nu.studer.sample.kotlin_sample_app.KotlinSampleApp
import nu.studer.sample.mysql.Mysql
import nu.studer.sample.performance_schema.PerformanceSchema
import nu.studer.sample.sys.Sys

import org.jooq.Schema
import org.jooq.impl.CatalogImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class DefaultCatalog : CatalogImpl("") {
    companion object {

        /**
         * The reference instance of <code>DEFAULT_CATALOG</code>
         */
        val DEFAULT_CATALOG = DefaultCatalog()
    }

    /**
     * The schema <code>information_schema</code>.
     */
    val INFORMATION_SCHEMA get() = InformationSchema.INFORMATION_SCHEMA

    /**
     * The schema <code>kotlin_sample_app</code>.
     */
    val KOTLIN_SAMPLE_APP get() = KotlinSampleApp.KOTLIN_SAMPLE_APP

    /**
     * The schema <code>mysql</code>.
     */
    val MYSQL get() = Mysql.MYSQL

    /**
     * The schema <code>performance_schema</code>.
     */
    val PERFORMANCE_SCHEMA get() = PerformanceSchema.PERFORMANCE_SCHEMA

    /**
     * The schema <code>sys</code>.
     */
    val SYS get() = Sys.SYS

    override fun getSchemas(): List<Schema> = listOf(
        InformationSchema.INFORMATION_SCHEMA,
        KotlinSampleApp.KOTLIN_SAMPLE_APP,
        Mysql.MYSQL,
        PerformanceSchema.PERFORMANCE_SCHEMA,
        Sys.SYS
    )
}
